{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert-contains' );\nvar format = require( '@stdlib/string-format' );\nvar posix = require( '@stdlib/regexp-filename-posix' );\nvar win32 = require( '@stdlib/regexp-filename-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert-is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a filename.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME = reFilename( 'posix' );\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\nfunction reFilename( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilename;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to split a filename.\n*\n* @module @stdlib/regexp-filename\n*\n* @example\n* var reFilename = require( '@stdlib/regexp-filename' );\n* var RE_FILENAME = reFilename();\n*\n* // On a POSIX platform...\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*\n* @example\n* var reFilename = require( '@stdlib/regexp-filename' );\n* var RE_FILENAME = reFilename();\n*\n* // On a Windows platform...\n* var parts = RE_FILENAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar posix = require( '@stdlib/regexp-filename-posix' ).REGEXP;\nvar win32 = require( '@stdlib/regexp-filename-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert-is-windows' );\nvar main = require( './main.js' );\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,yBAA0B,EAC9CC,EAAS,QAAS,uBAAwB,EAC1CC,EAAQ,QAAS,+BAAgC,EACjDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAa,QAAS,2BAA4B,EAKlDC,EAAY,CAAE,QAAS,OAAQ,EAiBnC,SAASC,EAAYC,EAAW,CAC/B,GAAK,UAAU,OAAS,GAClB,CAACP,EAAUK,EAAWE,CAAS,EACnC,MAAM,IAAI,MAAON,EAAQ,qEAAsEI,EAAU,KAAM,MAAO,EAAGE,CAAS,CAAE,EAGtI,OAAKA,IAAa,SAAWH,EACrBD,EAAM,EAGPD,EAAM,CACd,CAKAH,EAAO,QAAUO,ICpBjB,IAAIE,EAAc,QAAS,uDAAwD,EAC/EC,EAAQ,QAAS,+BAAgC,EAAE,OACnDC,EAAQ,QAAS,iCAAkC,EAAE,OACrDC,EAAa,QAAS,2BAA4B,EAClDC,EAAO,IAKPC,EAAWF,EAAeD,EAAQD,EAKtCD,EAAaI,EAAM,SAAUC,CAAO,EACpCL,EAAaI,EAAM,eAAgBH,CAAM,EACzCD,EAAaI,EAAM,eAAgBF,CAAM,EAKzC,OAAO,QAAUE",
  "names": ["require_main", "__commonJSMin", "exports", "module", "contains", "format", "posix", "win32", "IS_WINDOWS", "PLATFORMS", "reFilename", "platform", "setReadOnly", "posix", "win32", "IS_WINDOWS", "main", "REGEXP"]
}
