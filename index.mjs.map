{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport contains from '@stdlib/assert-contains' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport posix from '@stdlib/regexp-filename-posix' ;\nimport win32 from '@stdlib/regexp-filename-windows' ;\nimport IS_WINDOWS from '@stdlib/assert-is-windows' ;\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a filename.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME = reFilename( 'posix' );\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\nfunction reFilename( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nexport default reFilename;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to split a filename.\n*\n* @module @stdlib/regexp-filename\n*\n* @example\n* import reFilename from '@stdlib/regexp-filename' ;\n* var RE_FILENAME = reFilename();\n*\n* // On a POSIX platform...\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*\n* @example\n* import reFilename from '@stdlib/regexp-filename' ;\n* var RE_FILENAME = reFilename();\n*\n* // On a Windows platform...\n* var parts = RE_FILENAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport { REGEXP as posix } from '@stdlib/regexp-filename-posix' ;\nimport { REGEXP as win32 } from '@stdlib/regexp-filename-windows' ;\nimport IS_WINDOWS from '@stdlib/assert-is-windows' ;\nimport reFilename from './main.js' ;\n\n\n// MAIN //\n\nsetReadOnly( reFilename, 'REGEXP', ( IS_WINDOWS ) ? win32 : posix );\nsetReadOnly( reFilename, 'REGEXP_POSIX', posix );\nsetReadOnly( reFilename, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nexport default reFilename;\n"],"names":["PLATFORMS","reFilename","platform","arguments","length","contains","Error","format","join","IS_WINDOWS","win32","posix","setReadOnly"],"mappings":";;+xBA+BA,IAAIA,EAAY,CAAE,QAAS,SAiB3B,SAASC,EAAYC,GACpB,GAAKC,UAAUC,OAAS,IACjBC,EAAUL,EAAWE,GAC1B,MAAM,IAAII,MAAOC,EAAQ,qEAAsEP,EAAUQ,KAAM,QAAUN,IAG3H,MAAkB,UAAbA,GAAwBO,EACrBC,IAGDC,ICLRC,EAAAX,EAAA,SAAA,EAAAS,EAAAC,GACAC,EAAAX,EAAA,eAAAU,GACAC,EAAAX,EAAA,eAAAS"}